#include <hessianCal.h>
#include <ros/ros.h>

void HessianCal::getAnalyticalJacobian(const vector<double> &qs, Matrix7d &jacobian)
{
  // temp variables used for matlab auto generated code

  double q1 = qs[0];
  double q2 = qs[1];
  double q3 = qs[2];
  double q4 = qs[3];
  double q5 = qs[4];
  double q6 = qs[5];
  double q7 = qs[6];

  double t2,t3,t4,t5,t6,t7,t8,t9,t10,t11,t12,t13,t14,t15,t16,t17,t18,t19,t20,t21,t22,t23,t24,t25,t26,t27,t28,t29,t30,t31,t32,t33,t34,t35,t36,t37,t38,t39,t40,t41,t42,t43,t44,t45,t46,t47,t48,t49,t50;
  double t51,t52,t53,t54,t55,t56,t57,t58,t59,t60,t61,t62,t63,t64,t65,t66,t67,t68,t69,t70,t71,t72,t73,t74,t75,t76,t77,t78,t79,t80,t81,t82,t83,t84,t85,t86,t87,t88,t89,t90,t91,t92,t93,t94,t95,t96,t97,t98,t99,t100;
  double t101,t102,t103,t104,t105,t106,t107,t108,t109,t110,t111,t112,t113,t114,t115,t116,t117,t118,t119,t120,t121,t122,t123,t124,t125,t126,t127,t128,t129,t130,t131,t132,t133,t134,t135,t136,t137,t138,t139,t140,t141,t142,t143,t144,t145,t146,t147,t148,t149,t150;
  double t151,t152,t153,t154,t155,t156,t157,t158,t159,t160,t161,t162,t163,t164,t165,t166,t167,t168,t169,t170,t171,t172,t173,t174,t175,t176,t177,t178,t179,t180,t181,t182,t183,t184,t185,t186,t187,t188,t189,t190,t191,t192,t193,t194,t195,t196,t197,t198,t199,t200;
  double t201,t202,t203,t204,t205,t206,t207,t208,t209,t210,t211,t212,t213,t214,t215,t216,t217,t218,t219,t220,t221,t222,t223,t224,t225,t226,t227,t228,t229,t230,t231;
  double A0[7][7];
  memset(A0,0,sizeof(A0));

  // matlab auto generated code
  // t2 = cos(q1);
  // t3 = cos(q2);
  // t4 = cos(q3);
  // t5 = cos(q4);
  // t6 = cos(q5);
  // t7 = cos(q6);
  // t8 = cos(q7);
  // t9 = sin(q1);
  // t10 = sin(q2);
  // t11 = sin(q3);
  // t12 = sin(q4);
  // t13 = sin(q5);
  // t14 = sin(q6);
  // t15 = sin(q7);
  // t16 = t2*t2;
  // t17 = t3*t3;
  // t18 = t9*t9;
  // t19 = t10*t10;
  // t20 = t2*t4;
  // t21 = t3*t5;
  // t22 = t2*t11;
  // t23 = t4*t9;
  // t24 = t3*t12;
  // t25 = t9*t11;
  // t26 = t9*t10*t12;
  // t28 = t10*t11*t13;
  // t33 = t2*t5*t10;
  // t35 = t4*t5*t10;
  // t38 = t2*t10*t12;
  // t39 = t5*t9*t10;
  // t42 = t4*t10*t12;
  // t43 = t6*t10*t11;
  // t47 = t3*(4.1E+1/1.0E+2);
  // t82 = t10*t11*9.8E-3;
  // t27 = t12*t25;
  // t29 = t3*t20;
  // t30 = t7*t21;
  // t31 = t3*t22;
  // t32 = t3*t23;
  // t34 = t5*t22;
  // t36 = t6*t24;
  // t37 = t3*t25;
  // t40 = t12*t22;
  // t41 = t5*t25;
  // t44 = t13*t24;
  // t45 = -t26;
  // t46 = -t28;
  // t48 = t20*t21;
  // t49 = t20*t24;
  // t50 = t21*t23;
  // t51 = t6*t35;
  // t52 = t6*t15*t20;
  // t53 = t6*t8*t23;
  // t54 = t23*t24;
  // t55 = t13*t35;
  // t56 = t7*t42;
  // t61 = -t33;
  // t63 = -t35;
  // t65 = t14*t28;
  // t67 = t7*t8*t13*t20;
  // t70 = t8*t13*t38;
  // t71 = t14*t15*t33;
  // t73 = t8*t14*t39;
  // t76 = t7*t13*t15*t23;
  // t80 = t13*t15*t26;
  // t83 = -t82;
  // t86 = t21+t42;
  // t94 = t6*t7*t15*t38;
  // t95 = t6*t7*t8*t26;
  // t101 = t21*3.111E-1;
  // t124 = t42*3.111E-1;
  // t57 = t14*t36;
  // t58 = -t30;
  // t59 = -t31;
  // t60 = -t32;
  // t62 = -t34;
  // t64 = -t36;
  // t66 = t6*t8*t31;
  // t68 = t14*t51;
  // t69 = t6*t15*t37;
  // t72 = t13*t15*t34;
  // t74 = t8*t13*t41;
  // t75 = t8*t14*t40;
  // t77 = -t54;
  // t78 = -t56;
  // t81 = t14*t15*t27;
  // t84 = t20+t37;
  // t85 = t25+t29;
  // t87 = t8*t13*t48;
  // t88 = t6*t7*t8*t34;
  // t89 = t13*t15*t50;
  // t90 = t14*t15*t49;
  // t91 = t8*t14*t54;
  // t92 = t7*t13*t15*t31;
  // t93 = t7*t8*t13*t37;
  // t96 = t6*t7*t15*t41;
  // t98 = -t67;
  // t99 = t13*t15*t45;
  // t102 = t30*t52;
  // t103 = t30*t53;
  // t106 = t24+t63;
  // t112 = -t94;
  // t113 = t6*t7*t8*t45;
  // t115 = -t101;
  // t118 = t7*t86;
  // t121 = t14*t86;
  // t135 = -t124;
  // t137 = t38+t41+t48;
  // t143 = t27+t49+t61;
  // t79 = -t57;
  // t97 = t6*t8*t59;
  // t100 = -t81;
  // t104 = t22+t60;
  // t105 = t23+t59;
  // t107 = -t89;
  // t108 = -t90;
  // t109 = t8*t14*t77;
  // t110 = t7*t13*t15*t59;
  // t111 = -t93;
  // t114 = -t96;
  // t116 = t5*t85;
  // t117 = t6*t84;
  // t119 = t12*t85;
  // t120 = t13*t84;
  // t122 = t52*t58;
  // t123 = t53*t58;
  // t128 = t6*t106;
  // t129 = -t118;
  // t133 = t13*t106;
  // t134 = -t121;
  // t139 = t118*2.638E-1;
  // t142 = t26+t50+t62;
  // t144 = t28+t51+t64;
  // t145 = t39+t40+t77;
  // t149 = t6*t137;
  // t150 = t13*t137;
  // t161 = t14*t143;
  // t125 = t5*t104;
  // t126 = t6*t105;
  // t127 = -t117;
  // t130 = t12*t104;
  // t131 = t13*t105;
  // t132 = -t120;
  // t138 = t38+t116;
  // t141 = t43+t133;
  // t146 = t61+t119;
  // t152 = t46+t128;
  // t153 = -t7*(t33-t119);
  // t155 = -t14*(t33-t119);
  // t159 = t6*t142;
  // t160 = t13*t142;
  // t162 = t14*t144;
  // t163 = t14*t145;
  // t166 = -t7*(t28-t128);
  // t169 = -t14*(t28-t128);
  // t170 = t14*(t28-t128);
  // t171 = t7*(t33-t119)*(-2.638E-1);
  // t198 = -t8*(t121+t7*(t28-t128));
  // t200 = -t15*(t121+t7*(t28-t128));
  // t230 = t52+t53+t58+t65+t68+t69+t70+t71+t72+t73+t74+t75+t76+t78+t79+t87+t88+t97+t98+t99+t100+t107+t108+t109+t110+t111+t112+t113+t114+t122+t123+1.0;
  // t136 = -t131;
  // t140 = t39+t130;
  // t147 = t6*t138;
  // t148 = t13*t138;
  // t151 = t45+t125;
  // t156 = t8*t141;
  // t158 = t15*t141;
  // t164 = -t6*(t26-t125);
  // t168 = -t13*(t26-t125);
  // t173 = t170*(-2.638E-1);
  // t175 = t126+t150;
  // t176 = t120+t159;
  // t179 = t118+t169;
  // t181 = t127+t160;
  // t187 = t134+t166;
  // t191 = -t7*(t131-t149);
  // t194 = -t15*(t117-t160);
  // t195 = -t7*(t120+t6*(t26-t125));
  // t199 = -t14*(t120+t6*(t26-t125));
  // t201 = t15*(t117-t160);
  // t202 = t14*(t120+t6*(t26-t125));
  // t231 = 1.0/sqrt(t230);
  // t154 = t7*t140;
  // t157 = t14*t140;
  // t167 = -t156;
  // t174 = t126+t148;
  // t177 = t136+t147;
  // t178 = t117+t168;
  // t180 = t136+t149;
  // t184 = t8*t175;
  // t185 = t7*t176;
  // t186 = t132+t164;
  // t188 = -t7*(t131-t147);
  // t189 = -t14*(t131-t147);
  // t196 = t14*(t131-t147);
  // t205 = t202*(-2.638E-1);
  // t206 = t139+t173;
  // t207 = t161+t191;
  // t212 = -t8*(t14*(t33-t119)+t7*(t131-t147));
  // t213 = -t15*(t14*(t33-t119)+t7*(t131-t147));
  // t217 = t15*(t14*(t33-t119)+t7*(t131-t147));
  // t165 = -t154;
  // t172 = t154*2.638E-1;
  // t182 = t8*t174;
  // t183 = t15*t174;
  // t190 = t8*t178;
  // t192 = t15*t178;
  // t193 = -t185;
  // t203 = t196*(-2.638E-1);
  // t204 = t196*2.638E-1;
  // t209 = t155+t188;
  // t210 = t157+t195;
  // t211 = t153+t196;
  // t214 = t15*t207;
  // t216 = t154+t202;
  // t221 = t47+t83+t115+t135+t206;
  // t197 = -t190;
  // t208 = t163+t193;
  // t218 = t8*t210;
  // t219 = t15*t210;
  // t220 = -t214;
  // t222 = t167+t200+t211;
  // t223 = t158+t165+t198+t199;
  // t215 = t8*t208;
  // t224 = t183+t197+t212+t219;
  // t226 = t129+t170+t182+t192+t217+t218+1.0;
  // t225 = t129+t162+t184+t201+t215+t220+1.0;
  // t228 = sqrt(t226);
  // t227 = 1.0/sqrt(t225);
  // t229 = 1.0/t228;
  // A0[0][0] = t20*(-9.8E-3)-t37*9.8E-3+t39*3.111E-1+t130*3.111E-1-t172+t205-t9*t10*(4.1E+1/1.0E+2);
  // A0[0][1] = -t2*(-t47+t82+t101+t124-t139+t170*2.638E-1);
  // A0[0][2] = t25*9.8E-3+t29*9.8E-3+t12*t23*3.111E-1-t22*t24*3.111E-1-t7*t12*t23*2.638E-1+t13*t14*t25*2.638E-1+t7*t22*t24*2.638E-1+t13*t14*t29*2.638E-1+t5*t6*t14*t23*2.638E-1-t6*t14*t21*t22*2.638E-1;
  // A0[0][3] = t38*3.111E-1+t41*3.111E-1+t48*3.111E-1-t7*t38*2.638E-1-t7*t41*2.638E-1-t20*t30*2.638E-1-t20*t57*2.638E-1-t6*t14*t27*2.638E-1+t6*t14*t33*2.638E-1;
  // A0[0][4] = t14*(t6*t23+t13*t38+t13*t41+t13*t48+t6*t59)*(-2.638E-1);
  // A0[0][5] = t178*t206+t141*(t172+t202*2.638E-1);
  // A0[1][0] = t23*9.8E-3-t31*9.8E-3+t33*3.111E-1-t119*3.111E-1+t171+t204-t2*t10*(4.1E+1/1.0E+2);
  // A0[1][1] = t9*(-t47+t82+t101+t124-t139+t170*2.638E-1);
  // A0[1][2] = t22*9.8E-3-t32*9.8E-3+t12*t20*3.111E-1+t24*t25*3.111E-1-t7*t12*t20*2.638E-1+t13*t14*t22*2.638E-1-t7*t24*t25*2.638E-1-t13*t14*t32*2.638E-1+t5*t6*t14*t20*2.638E-1+t6*t14*t21*t25*2.638E-1;
  // A0[1][3] = t26*(-3.111E-1)+t34*3.111E-1-t50*3.111E-1+t7*t26*2.638E-1-t7*t34*2.638E-1+t23*t30*2.638E-1+t23*t57*2.638E-1-t6*t14*t39*2.638E-1-t6*t14*t40*2.638E-1;
  // A0[1][4] = t14*(t6*t20+t6*t37+t13*t34+t13*t45-t13*t50)*(-2.638E-1);
  // A0[1][5] = -t141*(t204-t7*(t33-t119)*2.638E-1)-t174*t206;
  // A0[2][1] = t10*(4.1E+1/1.0E+2)+t3*t11*9.8E-3-t5*t10*3.111E-1+t4*t24*3.111E-1+t5*t7*t10*2.638E-1-t4*t7*t24*2.638E-1+t3*t11*t13*t14*2.638E-1+t6*t10*t12*t14*2.638E-1+t4*t6*t14*t21*2.638E-1;
  // A0[2][2] = (t10*(t4*9.8E+1-t11*t12*3.111E+3+t7*t11*t12*2.638E+3+t4*t13*t14*2.638E+3-t5*t6*t11*t14*2.638E+3))/1.0E+4;
  // A0[2][3] = t24*(-3.111E-1)+t35*3.111E-1+t7*t24*2.638E-1-t7*t35*2.638E-1-t6*t14*t21*2.638E-1-t6*t14*t42*2.638E-1;
  // A0[2][4] = t14*(t43+t44-t55)*2.638E-1;
  // A0[2][5] = t7*t28*2.638E-1+t14*t21*2.638E-1-t7*t36*2.638E-1+t14*t42*2.638E-1+t7*t51*2.638E-1;
  // A0[3][0] = t224*t229*(-1.0/4.0);
  // A0[3][1] = (t229*(t2*t8*t44-t9*t15*t44+t5*t7*t10*t16+t5*t7*t10*t18+t6*t8*t10*t22-t4*t7*t16*t24+t2*t14*t15*t21+t8*t9*t14*t21-t4*t7*t18*t24-t6*t10*t15*t25+t5*t7*t10*t52+t5*t7*t10*t53+t2*t7*t15*t64+t7*t8*t9*t64-t5*t8*t10*t13*t20+t3*t11*t13*t14*t16+t6*t10*t12*t14*t16+t3*t11*t13*t14*t18+t6*t10*t12*t14*t18+t4*t6*t14*t16*t21+t4*t6*t14*t18*t21+t7*t8*t10*t13*t25+t5*t10*t13*t15*t23+t7*t10*t13*t15*t22+t8*t10*t12*t14*t23+t10*t12*t14*t15*t20))/4.0;
  // A0[3][2] = (t229*(-t6*t8*t29+t6*t15*t32-t6*t8*t17*t25-t6*t8*t19*t25-t6*t15*t17*t22-t6*t15*t19*t22-t7*t13*t15*t29-t8*t13*t21*t22+t6*t8*t25*t30+t8*t14*t24*t25+t6*t15*t22*t30+t13*t15*t21*t25+t14*t15*t22*t24-t5*t14*t16*t43-t5*t14*t18*t43+t7*t8*t13*t60+t7*t10*t11*t12*t16+t4*t10*t13*t14*t16+t7*t10*t11*t12*t18+t4*t10*t13*t14*t18+t5*t8*t13*t17*t23+t7*t8*t13*t17*t22+t5*t8*t13*t19*t23+t7*t8*t13*t19*t22+t5*t13*t15*t17*t20+t8*t12*t14*t17*t20+t5*t13*t15*t19*t20+t8*t12*t14*t19*t20-t7*t13*t15*t17*t25-t7*t13*t15*t19*t25-t12*t14*t15*t17*t23-t12*t14*t15*t19*t23+t5*t6*t7*t8*t17*t20+t5*t6*t7*t8*t19*t20-t5*t6*t7*t15*t17*t23-t5*t6*t7*t15*t19*t23))/4.0;
  // A0[3][3] = t227*(-t7*t24+t7*t35+t6*t14*t21+t8*t13*t27+t8*t14*t26+t6*t14*t42+t13*t15*t39+t14*t15*t38+t13*t15*t40+t14*t15*t41+t8*t14*t50+t8*t20*t44+t14*t15*t48+t8*t13*t61-t15*t23*t44+t8*t14*t62-t6*t7*t15*t27+t6*t7*t8*t39+t6*t7*t8*t40+t6*t7*t15*t33+t7*t8*t23*t64+t7*t15*t20*t64)*(-1.0/4.0);
  // A0[3][4] = (t227*(t14*t43+t14*t44-t14*t55-t8*t13*t23-t13*t15*t20+t6*t8*t38+t8*t13*t31+t6*t8*t41+t6*t15*t34+t6*t8*t48-t13*t15*t37+t6*t15*t45-t6*t15*t50-t6*t7*t8*t20+t6*t7*t15*t23+t7*t8*t13*t26-t6*t7*t8*t37+t7*t13*t15*t38+t8*t13*t23*t30+t7*t13*t15*t41+t13*t15*t20*t30+t6*t7*t15*t59+t7*t8*t13*t62))/4.0;
  // A0[3][5] = (t227*(t7*t28+t14*t21+t14*t42+t7*t51+t7*t64-t7*t15*t27+t7*t8*t39+t7*t8*t40+t7*t15*t33-t7*t15*t49+t7*t8*t77+t6*t8*t14*t26+t8*t13*t14*t20-t13*t14*t15*t23+t8*t13*t14*t37+t6*t14*t15*t38+t13*t14*t15*t31+t6*t14*t15*t41+t6*t8*t14*t50+t6*t14*t15*t48+t6*t8*t14*t62))/4.0;
  // A0[3][6] = t231*(-t6*t8*t20+t6*t15*t23+t8*t13*t26+t8*t14*t27-t6*t8*t37+t13*t15*t38+t14*t15*t39+t13*t15*t41+t14*t15*t40+t8*t13*t50+t8*t14*t49+t13*t15*t48+t6*t15*t59+t8*t13*t62+t8*t14*t61+t14*t15*t77-t7*t8*t13*t23-t7*t13*t15*t20+t6*t7*t8*t38+t7*t8*t13*t31+t6*t7*t8*t41+t6*t7*t15*t34+t6*t8*t20*t30-t7*t13*t15*t37+t6*t7*t15*t45+t6*t15*t23*t58)*(-1.0/4.0);
  // A0[4][0] = (t229*(t156+t189+t15*(t121+t7*(t28-t128))+t7*(t33-t119)))/4.0;
  // A0[4][1] = (t229*(-t9+t9*t30+t9*t57-t4*t6*t8*t16-t4*t6*t8*t18+t7*t10*t12*t23-t10*t13*t14*t25-t3*t6*t11*t15*t16-t3*t6*t11*t15*t18-t5*t8*t10*t14*t16-t5*t8*t11*t13*t16-t4*t7*t13*t15*t16-t5*t8*t10*t14*t18-t5*t8*t11*t13*t18-t4*t7*t13*t15*t18-t5*t6*t10*t14*t23+t4*t6*t8*t16*t30+t4*t6*t8*t18*t30+t4*t8*t14*t16*t24+t10*t12*t13*t15*t16+t4*t8*t14*t18*t24+t10*t12*t13*t15*t18+t11*t12*t14*t15*t16+t4*t13*t15*t16*t21+t11*t12*t14*t15*t18+t4*t13*t15*t18*t21+t3*t7*t8*t11*t13*t16+t6*t7*t8*t10*t12*t16+t3*t7*t8*t11*t13*t18+t5*t6*t7*t11*t15*t16+t6*t7*t8*t10*t12*t18+t5*t6*t7*t11*t15*t18))/4.0;
  // A0[4][2] = t227*(t2*t10+t8*t12*t13+t5*t14*t15-t7*t12*t20+t5*t15*t28+t13*t14*t22-t7*t24*t25+t13*t14*t60+t4*t6*t10*t15-t6*t7*t12*t15+t5*t6*t14*t20+t5*t7*t8*t43+t6*t14*t21*t25-t4*t7*t8*t10*t13+t8*t10*t11*t12*t14)*(-1.0/4.0);
  // A0[4][3] = t227*(-t23+t31-t6*t8+t7*t26+t23*t30+t7*t62+t23*t57-t7*t13*t15+t6*t8*t30+t8*t14*t24+t13*t15*t21-t6*t14*t39-t6*t14*t40+t6*t8*t56+t13*t15*t42+t8*t14*t63)*(-1.0/4.0);
  // A0[4][4] = (t231*(-t27+t33-t49+t14*t15+t15*t28+t15*t51+t15*t64+t6*t14*t20+t6*t14*t37+t7*t8*t43+t7*t8*t44+t13*t14*t34-t7*t8*t55+t13*t14*t45-t13*t14*t50))/4.0;
  // A0[4][5] = t174*t228*(-1.0/4.0)-(t141*t229*(t156+t189+t15*(t121+t7*(t28-t128))+t7*(t33-t119)))/4.0+(t178*t224*t229)/4.0;
  // A0[4][6] = t228*(t189+t7*(t33-t119))*(-1.0/4.0)-(t179*t229*(t156+t189+t15*(t121+t7*(t28-t128))+t7*(t33-t119)))/4.0-(t216*t224*t229)/4.0;
  // A0[5][0] = t229*(-t158+t216+t8*(t121+t7*(t28-t128)))*(-1.0/4.0);
  // A0[5][1] = t229*(t2+t2*t58+t2*t79+t4*t6*t15*t16+t4*t6*t15*t18-t7*t10*t12*t20+t10*t13*t14*t22-t3*t6*t8*t11*t16-t3*t6*t8*t11*t18-t4*t7*t8*t13*t16-t4*t7*t8*t13*t18+t5*t6*t10*t14*t20+t8*t10*t12*t13*t16+t5*t10*t14*t15*t16+t5*t11*t13*t15*t16+t8*t10*t12*t13*t18+t8*t11*t12*t14*t16+t4*t8*t13*t16*t21+t5*t10*t14*t15*t18+t5*t11*t13*t15*t18+t8*t11*t12*t14*t18+t4*t8*t13*t18*t21-t4*t14*t15*t16*t24-t4*t14*t15*t18*t24+t4*t6*t15*t16*t58+t4*t6*t15*t18*t58+t5*t6*t7*t8*t11*t16+t5*t6*t7*t8*t11*t18-t3*t7*t11*t13*t15*t16-t6*t7*t10*t12*t15*t16-t3*t7*t11*t13*t15*t18-t6*t7*t10*t12*t15*t18)*(-1.0/4.0);
  // A0[5][2] = (t227*(t9*t10+t5*t8*t14-t12*t13*t15+t5*t8*t28-t7*t12*t23+t13*t14*t25+t7*t22*t24+t13*t14*t29+t4*t6*t8*t10-t6*t7*t8*t12+t5*t6*t14*t23-t6*t14*t21*t22-t5*t7*t15*t43+t4*t7*t10*t13*t15-t10*t11*t12*t14*t15))/4.0;
  // A0[5][3] = t227*(-t84-t6*t15+t7*t38+t7*t41+t20*t30+t20*t57+t7*t8*t13-t8*t13*t21+t6*t14*t27+t6*t15*t30+t14*t15*t24-t8*t13*t42+t6*t15*t56+t6*t14*t61+t14*t15*t63)*(-1.0/4.0);
  // A0[5][4] = t231*(t145+t8*t14+t8*t28+t8*t51+t8*t64+t6*t14*t23-t7*t15*t43+t13*t14*t38-t7*t15*t44+t13*t14*t41+t13*t14*t48+t7*t15*t55+t6*t14*t59)*(-1.0/4.0);
  // A0[5][5] = t178*t228*(-1.0/4.0)+(t141*t229*(-t158+t216+t8*(t121+t7*(t28-t128))))/4.0-(t174*t224*t229)/4.0;
  // A0[5][6] = (t216*t228)/4.0+(t179*t229*(-t158+t216+t8*(t121+t7*(t28-t128))))/4.0-(t224*t229*(t189+t7*(t33-t119)))/4.0;
  // A0[6][0] = t228*(-1.0/4.0);
  // A0[6][1] = t229*(t2*t15*t44+t8*t9*t44-t2*t8*t14*t21-t7*t11*t12*t16-t4*t13*t14*t16-t7*t11*t12*t18-t4*t13*t14*t18+t6*t8*t10*t25+t2*t7*t8*t36+t6*t10*t15*t22+t9*t14*t15*t21+t7*t9*t15*t64+t5*t6*t11*t14*t16+t5*t6*t11*t14*t18-t5*t8*t10*t13*t23-t7*t8*t10*t13*t22-t5*t10*t13*t15*t20-t8*t10*t12*t14*t20+t7*t10*t13*t15*t25+t10*t12*t14*t15*t23-t5*t6*t7*t8*t10*t20+t5*t6*t7*t10*t15*t23)*(-1.0/4.0);
  // A0[6][2] = t227*(-t3+t5*t7+t6*t12*t14+t6*t8*t22-t6*t15*t25-t6*t15*t29+t5*t7*t52+t5*t7*t53+t6*t8*t60-t5*t8*t13*t20+t7*t8*t13*t25+t5*t13*t15*t23+t7*t8*t13*t29+t7*t13*t15*t22+t8*t12*t14*t23+t12*t14*t15*t20-t8*t13*t21*t25-t8*t14*t22*t24-t13*t15*t21*t22+t6*t15*t25*t30+t14*t15*t24*t25+t6*t8*t22*t58+t7*t13*t15*t60)*(-1.0/4.0);
  // A0[6][3] = t227*(t10*t11+t13*t14-t13*t15*t27+t8*t13*t39+t8*t14*t38+t8*t13*t40+t13*t15*t33+t8*t14*t41+t14*t15*t34+t8*t14*t48+t14*t15*t45-t8*t23*t44-t14*t15*t50-t15*t20*t44-t6*t7*t8*t27+t6*t7*t8*t33-t6*t7*t15*t39-t6*t7*t15*t40+t7*t15*t23*t36+t7*t8*t20*t64)*(-1.0/4.0);
  // A0[6][4] = t231*(-t7+t86-t7*t52-t7*t53+t7*t66-t7*t69-t7*t70-t7*t74+t7*t80+t6*t8*t26+t8*t13*t20-t13*t15*t23+t8*t13*t37+t6*t15*t38+t13*t15*t31+t6*t15*t41+t6*t8*t50+t6*t15*t48+t6*t8*t62+t13*t15*t23*t30+t7*t13*t15*t62+t8*t13*t20*t58)*(-1.0/4.0);
  // A0[6][5] = t231*(-t43-t44+t55+t7*t8*t27+t7*t15*t39+t7*t15*t40+t7*t8*t49+t7*t8*t61+t7*t15*t77+t8*t13*t14*t23+t6*t14*t15*t26+t13*t14*t15*t20-t6*t8*t14*t38-t6*t8*t14*t41-t6*t8*t14*t48+t13*t14*t15*t37+t6*t14*t15*t50+t8*t13*t14*t59+t6*t14*t15*t62)*(-1.0/4.0);
  // A0[6][6] = (t179*t228)/4.0-(t229*(t189+t7*(t33-t119))*(t156+t189+t15*(t121+t7*(t28-t128))+t7*(t33-t119)))/4.0-(t216*t229*(-t158+t216+t8*(t121+t7*(t28-t128))))/4.0;
  
  t2 = cos(q1);
  t3 = cos(q2);
  t4 = cos(q3);
  t5 = cos(q4);
  t6 = cos(q5);
  t7 = cos(q6);
  t8 = cos(q7);
  t9 = sin(q1);
  t10 = sin(q2);
  t11 = sin(q3);
  t12 = sin(q4);
  t13 = sin(q5);
  t14 = sin(q6);
  t15 = sin(q7);
  t16 = t2*t2;
  t17 = t3*t3;
  t18 = t9*t9;
  t19 = t10*t10;
  t20 = t2*t4;
  t21 = t3*t5;
  t22 = t2*t11;
  t23 = t4*t9;
  t24 = t3*t12;
  t25 = t9*t11;
  t26 = t9*t10*t12;
  t28 = t10*t11*t13;
  t33 = t2*t5*t10;
  t35 = t4*t5*t10;
  t38 = t2*t10*t12;
  t39 = t5*t9*t10;
  t42 = t4*t10*t12;
  t43 = t6*t10*t11;
  t47 = t3*(4.1E+1/1.0E+2);
  t82 = t10*t11*9.8E-3;
  t27 = t12*t25;
  t29 = t3*t20;
  t30 = t7*t21;
  t31 = t3*t22;
  t32 = t3*t23;
  t34 = t5*t22;
  t36 = t6*t24;
  t37 = t3*t25;
  t40 = t12*t22;
  t41 = t5*t25;
  t44 = t13*t24;
  t45 = -t26;
  t46 = -t28;
  t48 = t20*t21;
  t49 = t20*t24;
  t50 = t21*t23;
  t51 = t6*t35;
  t52 = t6*t15*t20;
  t53 = t6*t8*t23;
  t54 = t23*t24;
  t55 = t13*t35;
  t56 = t7*t42;
  t61 = -t33;
  t63 = -t35;
  t65 = t14*t28;
  t67 = t7*t8*t13*t20;
  t70 = t8*t13*t38;
  t71 = t14*t15*t33;
  t73 = t8*t14*t39;
  t76 = t7*t13*t15*t23;
  t80 = t13*t15*t26;
  t83 = -t82;
  t86 = t21+t42;
  t94 = t6*t7*t15*t38;
  t95 = t6*t7*t8*t26;
  t101 = t21*3.111E-1;
  t124 = t42*3.111E-1;
  t57 = t14*t36;
  t58 = -t30;
  t59 = -t31;
  t60 = -t32;
  t62 = -t34;
  t64 = -t36;
  t66 = t6*t8*t31;
  t68 = t14*t51;
  t69 = t6*t15*t37;
  t72 = t13*t15*t34;
  t74 = t8*t13*t41;
  t75 = t8*t14*t40;
  t77 = -t54;
  t78 = -t56;
  t81 = t14*t15*t27;
  t84 = t20+t37;
  t85 = t25+t29;
  t87 = t8*t13*t48;
  t88 = t6*t7*t8*t34;
  t89 = t13*t15*t50;
  t90 = t14*t15*t49;
  t91 = t8*t14*t54;
  t92 = t7*t13*t15*t31;
  t93 = t7*t8*t13*t37;
  t96 = t6*t7*t15*t41;
  t98 = -t67;
  t99 = t13*t15*t45;
  t102 = t30*t52;
  t103 = t30*t53;
  t106 = t24+t63;
  t112 = -t94;
  t113 = t6*t7*t8*t45;
  t115 = -t101;
  t118 = t7*t86;
  t121 = t14*t86;
  t135 = -t124;
  t137 = t38+t41+t48;
  t143 = t27+t49+t61;
  t79 = -t57;
  t97 = t6*t8*t59;
  t100 = -t81;
  t104 = t22+t60;
  t105 = t23+t59;
  t107 = -t89;
  t108 = -t90;
  t109 = t8*t14*t77;
  t110 = t7*t13*t15*t59;
  t111 = -t93;
  t114 = -t96;
  t116 = t5*t85;
  t117 = t6*t84;
  t119 = t12*t85;
  t120 = t13*t84;
  t122 = t52*t58;
  t123 = t53*t58;
  t128 = t6*t106;
  t129 = -t118;
  t133 = t13*t106;
  t134 = -t121;
  t139 = t118*3.138E-1;
  t142 = t26+t50+t62;
  t144 = t28+t51+t64;
  t145 = t39+t40+t77;
  t149 = t6*t137;
  t150 = t13*t137;
  t161 = t14*t143;
  t125 = t5*t104;
  t126 = t6*t105;
  t127 = -t117;
  t130 = t12*t104;
  t131 = t13*t105;
  t132 = -t120;
  t138 = t38+t116;
  t141 = t43+t133;
  t146 = t61+t119;
  t152 = t46+t128;
  t153 = -t7*(t33-t119);
  t155 = -t14*(t33-t119);
  t159 = t6*t142;
  t160 = t13*t142;
  t162 = t14*t144;
  t163 = t14*t145;
  t166 = -t7*(t28-t128);
  t169 = -t14*(t28-t128);
  t170 = t14*(t28-t128);
  t171 = t7*(t33-t119)*(-3.138E-1);
  t198 = -t8*(t121+t7*(t28-t128));
  t200 = -t15*(t121+t7*(t28-t128));
  t230 = t52+t53+t58+t65+t68+t69+t70+t71+t72+t73+t74+t75+t76+t78+t79+t87+t88+t97+t98+t99+t100+t107+t108+t109+t110+t111+t112+t113+t114+t122+t123+1.0;
  t136 = -t131;
  t140 = t39+t130;
  t147 = t6*t138;
  t148 = t13*t138;
  t151 = t45+t125;
  t156 = t8*t141;
  t158 = t15*t141;
  t164 = -t6*(t26-t125);
  t168 = -t13*(t26-t125);
  t173 = t170*(-3.138E-1);
  t175 = t126+t150;
  t176 = t120+t159;
  t179 = t118+t169;
  t181 = t127+t160;
  t187 = t134+t166;
  t191 = -t7*(t131-t149);
  t194 = -t15*(t117-t160);
  t195 = -t7*(t120+t6*(t26-t125));
  t199 = -t14*(t120+t6*(t26-t125));
  t201 = t15*(t117-t160);
  t202 = t14*(t120+t6*(t26-t125));
  t231 = 1.0/sqrt(t230);
  t154 = t7*t140;
  t157 = t14*t140;
  t167 = -t156;
  t174 = t126+t148;
  t177 = t136+t147;
  t178 = t117+t168;
  t180 = t136+t149;
  t184 = t8*t175;
  t185 = t7*t176;
  t186 = t132+t164;
  t188 = -t7*(t131-t147);
  t189 = -t14*(t131-t147);
  t196 = t14*(t131-t147);
  t205 = t202*(-3.138E-1);
  t206 = t139+t173;
  t207 = t161+t191;
  t212 = -t8*(t14*(t33-t119)+t7*(t131-t147));
  t213 = -t15*(t14*(t33-t119)+t7*(t131-t147));
  t217 = t15*(t14*(t33-t119)+t7*(t131-t147));
  t165 = -t154;
  t172 = t154*3.138E-1;
  t182 = t8*t174;
  t183 = t15*t174;
  t190 = t8*t178;
  t192 = t15*t178;
  t193 = -t185;
  t203 = t196*(-3.138E-1);
  t204 = t196*3.138E-1;
  t209 = t155+t188;
  t210 = t157+t195;
  t211 = t153+t196;
  t214 = t15*t207;
  t216 = t154+t202;
  t221 = t47+t83+t115+t135+t206;
  t197 = -t190;
  t208 = t163+t193;
  t218 = t8*t210;
  t219 = t15*t210;
  t220 = -t214;
  t222 = t167+t200+t211;
  t223 = t158+t165+t198+t199;
  t215 = t8*t208;
  t224 = t183+t197+t212+t219;
  t226 = t129+t170+t182+t192+t217+t218+1.0;
  t225 = t129+t162+t184+t201+t215+t220+1.0;
  t228 = sqrt(t226);
  t227 = 1.0/sqrt(t225);
  t229 = 1.0/t228;
  A0[0][0] = t20*(-9.8E-3)-t37*9.8E-3+t39*3.111E-1+t130*3.111E-1-t172+t205-t9*t10*(4.1E+1/1.0E+2);
  A0[0][1] = -t2*(-t47+t82+t101+t124-t139+t170*3.138E-1);
  A0[0][2] = t25*9.8E-3+t29*9.8E-3+t12*t23*3.111E-1-t22*t24*3.111E-1-t7*t12*t23*3.138E-1+t13*t14*t25*3.138E-1+t7*t22*t24*3.138E-1+t13*t14*t29*3.138E-1+t5*t6*t14*t23*3.138E-1-t6*t14*t21*t22*3.138E-1;
  A0[0][3] = t38*3.111E-1+t41*3.111E-1+t48*3.111E-1-t7*t38*3.138E-1-t7*t41*3.138E-1-t20*t30*3.138E-1-t20*t57*3.138E-1-t6*t14*t27*3.138E-1+t6*t14*t33*3.138E-1;
  A0[0][4] = t14*(t6*t23+t13*t38+t13*t41+t13*t48+t6*t59)*(-3.138E-1);
  A0[0][5] = t178*t206+t141*(t172+t202*3.138E-1);
  A0[1][0] = t23*9.8E-3-t31*9.8E-3+t33*3.111E-1-t119*3.111E-1+t171+t204-t2*t10*(4.1E+1/1.0E+2);
  A0[1][1] = t9*(-t47+t82+t101+t124-t139+t170*3.138E-1);
  A0[1][2] = t22*9.8E-3-t32*9.8E-3+t12*t20*3.111E-1+t24*t25*3.111E-1-t7*t12*t20*3.138E-1+t13*t14*t22*3.138E-1-t7*t24*t25*3.138E-1-t13*t14*t32*3.138E-1+t5*t6*t14*t20*3.138E-1+t6*t14*t21*t25*3.138E-1;
  A0[1][3] = t26*(-3.111E-1)+t34*3.111E-1-t50*3.111E-1+t7*t26*3.138E-1-t7*t34*3.138E-1+t23*t30*3.138E-1+t23*t57*3.138E-1-t6*t14*t39*3.138E-1-t6*t14*t40*3.138E-1;
  A0[1][4] = t14*(t6*t20+t6*t37+t13*t34+t13*t45-t13*t50)*(-3.138E-1);
  A0[1][5] = -t141*(t204-t7*(t33-t119)*3.138E-1)-t174*t206;
  A0[2][1] = t10*(4.1E+1/1.0E+2)+t3*t11*9.8E-3-t5*t10*3.111E-1+t4*t24*3.111E-1+t5*t7*t10*3.138E-1-t4*t7*t24*3.138E-1+t3*t11*t13*t14*3.138E-1+t6*t10*t12*t14*3.138E-1+t4*t6*t14*t21*3.138E-1;
  A0[2][2] = (t10*(t4*9.8E+1-t11*t12*3.111E+3+t7*t11*t12*3.138E+3+t4*t13*t14*3.138E+3-t5*t6*t11*t14*3.138E+3))/1.0E+4;
  A0[2][3] = t24*(-3.111E-1)+t35*3.111E-1+t7*t24*3.138E-1-t7*t35*3.138E-1-t6*t14*t21*3.138E-1-t6*t14*t42*3.138E-1;
  A0[2][4] = t14*(t43+t44-t55)*3.138E-1;
  A0[2][5] = t7*t28*3.138E-1+t14*t21*3.138E-1-t7*t36*3.138E-1+t14*t42*3.138E-1+t7*t51*3.138E-1;
  A0[3][0] = t224*t229*(-1.0/4.0);
  A0[3][1] = (t229*(t2*t8*t44-t9*t15*t44+t5*t7*t10*t16+t5*t7*t10*t18+t6*t8*t10*t22-t4*t7*t16*t24+t2*t14*t15*t21+t8*t9*t14*t21-t4*t7*t18*t24-t6*t10*t15*t25+t5*t7*t10*t52+t5*t7*t10*t53+t2*t7*t15*t64+t7*t8*t9*t64-t5*t8*t10*t13*t20+t3*t11*t13*t14*t16+t6*t10*t12*t14*t16+t3*t11*t13*t14*t18+t6*t10*t12*t14*t18+t4*t6*t14*t16*t21+t4*t6*t14*t18*t21+t7*t8*t10*t13*t25+t5*t10*t13*t15*t23+t7*t10*t13*t15*t22+t8*t10*t12*t14*t23+t10*t12*t14*t15*t20))/4.0;
  A0[3][2] = (t229*(-t6*t8*t29+t6*t15*t32-t6*t8*t17*t25-t6*t8*t19*t25-t6*t15*t17*t22-t6*t15*t19*t22-t7*t13*t15*t29-t8*t13*t21*t22+t6*t8*t25*t30+t8*t14*t24*t25+t6*t15*t22*t30+t13*t15*t21*t25+t14*t15*t22*t24-t5*t14*t16*t43-t5*t14*t18*t43+t7*t8*t13*t60+t7*t10*t11*t12*t16+t4*t10*t13*t14*t16+t7*t10*t11*t12*t18+t4*t10*t13*t14*t18+t5*t8*t13*t17*t23+t7*t8*t13*t17*t22+t5*t8*t13*t19*t23+t7*t8*t13*t19*t22+t5*t13*t15*t17*t20+t8*t12*t14*t17*t20+t5*t13*t15*t19*t20+t8*t12*t14*t19*t20-t7*t13*t15*t17*t25-t7*t13*t15*t19*t25-t12*t14*t15*t17*t23-t12*t14*t15*t19*t23+t5*t6*t7*t8*t17*t20+t5*t6*t7*t8*t19*t20-t5*t6*t7*t15*t17*t23-t5*t6*t7*t15*t19*t23))/4.0;
  A0[3][3] = t227*(-t7*t24+t7*t35+t6*t14*t21+t8*t13*t27+t8*t14*t26+t6*t14*t42+t13*t15*t39+t14*t15*t38+t13*t15*t40+t14*t15*t41+t8*t14*t50+t8*t20*t44+t14*t15*t48+t8*t13*t61-t15*t23*t44+t8*t14*t62-t6*t7*t15*t27+t6*t7*t8*t39+t6*t7*t8*t40+t6*t7*t15*t33+t7*t8*t23*t64+t7*t15*t20*t64)*(-1.0/4.0);
  A0[3][4] = (t227*(t14*t43+t14*t44-t14*t55-t8*t13*t23-t13*t15*t20+t6*t8*t38+t8*t13*t31+t6*t8*t41+t6*t15*t34+t6*t8*t48-t13*t15*t37+t6*t15*t45-t6*t15*t50-t6*t7*t8*t20+t6*t7*t15*t23+t7*t8*t13*t26-t6*t7*t8*t37+t7*t13*t15*t38+t8*t13*t23*t30+t7*t13*t15*t41+t13*t15*t20*t30+t6*t7*t15*t59+t7*t8*t13*t62))/4.0;
  A0[3][5] = (t227*(t7*t28+t14*t21+t14*t42+t7*t51+t7*t64-t7*t15*t27+t7*t8*t39+t7*t8*t40+t7*t15*t33-t7*t15*t49+t7*t8*t77+t6*t8*t14*t26+t8*t13*t14*t20-t13*t14*t15*t23+t8*t13*t14*t37+t6*t14*t15*t38+t13*t14*t15*t31+t6*t14*t15*t41+t6*t8*t14*t50+t6*t14*t15*t48+t6*t8*t14*t62))/4.0;
  A0[3][6] = t231*(-t6*t8*t20+t6*t15*t23+t8*t13*t26+t8*t14*t27-t6*t8*t37+t13*t15*t38+t14*t15*t39+t13*t15*t41+t14*t15*t40+t8*t13*t50+t8*t14*t49+t13*t15*t48+t6*t15*t59+t8*t13*t62+t8*t14*t61+t14*t15*t77-t7*t8*t13*t23-t7*t13*t15*t20+t6*t7*t8*t38+t7*t8*t13*t31+t6*t7*t8*t41+t6*t7*t15*t34+t6*t8*t20*t30-t7*t13*t15*t37+t6*t7*t15*t45+t6*t15*t23*t58)*(-1.0/4.0);
  A0[4][0] = (t229*(t156+t189+t15*(t121+t7*(t28-t128))+t7*(t33-t119)))/4.0;
  A0[4][1] = (t229*(-t9+t9*t30+t9*t57-t4*t6*t8*t16-t4*t6*t8*t18+t7*t10*t12*t23-t10*t13*t14*t25-t3*t6*t11*t15*t16-t3*t6*t11*t15*t18-t5*t8*t10*t14*t16-t5*t8*t11*t13*t16-t4*t7*t13*t15*t16-t5*t8*t10*t14*t18-t5*t8*t11*t13*t18-t4*t7*t13*t15*t18-t5*t6*t10*t14*t23+t4*t6*t8*t16*t30+t4*t6*t8*t18*t30+t4*t8*t14*t16*t24+t10*t12*t13*t15*t16+t4*t8*t14*t18*t24+t10*t12*t13*t15*t18+t11*t12*t14*t15*t16+t4*t13*t15*t16*t21+t11*t12*t14*t15*t18+t4*t13*t15*t18*t21+t3*t7*t8*t11*t13*t16+t6*t7*t8*t10*t12*t16+t3*t7*t8*t11*t13*t18+t5*t6*t7*t11*t15*t16+t6*t7*t8*t10*t12*t18+t5*t6*t7*t11*t15*t18))/4.0;
  A0[4][2] = t227*(t2*t10+t8*t12*t13+t5*t14*t15-t7*t12*t20+t5*t15*t28+t13*t14*t22-t7*t24*t25+t13*t14*t60+t4*t6*t10*t15-t6*t7*t12*t15+t5*t6*t14*t20+t5*t7*t8*t43+t6*t14*t21*t25-t4*t7*t8*t10*t13+t8*t10*t11*t12*t14)*(-1.0/4.0);
  A0[4][3] = t227*(-t23+t31-t6*t8+t7*t26+t23*t30+t7*t62+t23*t57-t7*t13*t15+t6*t8*t30+t8*t14*t24+t13*t15*t21-t6*t14*t39-t6*t14*t40+t6*t8*t56+t13*t15*t42+t8*t14*t63)*(-1.0/4.0);
  A0[4][4] = (t231*(-t27+t33-t49+t14*t15+t15*t28+t15*t51+t15*t64+t6*t14*t20+t6*t14*t37+t7*t8*t43+t7*t8*t44+t13*t14*t34-t7*t8*t55+t13*t14*t45-t13*t14*t50))/4.0;
  A0[4][5] = t174*t228*(-1.0/4.0)-(t141*t229*(t156+t189+t15*(t121+t7*(t28-t128))+t7*(t33-t119)))/4.0+(t178*t224*t229)/4.0;
  A0[4][6] = t228*(t189+t7*(t33-t119))*(-1.0/4.0)-(t179*t229*(t156+t189+t15*(t121+t7*(t28-t128))+t7*(t33-t119)))/4.0-(t216*t224*t229)/4.0;
  A0[5][0] = t229*(-t158+t216+t8*(t121+t7*(t28-t128)))*(-1.0/4.0);
  A0[5][1] = t229*(t2+t2*t58+t2*t79+t4*t6*t15*t16+t4*t6*t15*t18-t7*t10*t12*t20+t10*t13*t14*t22-t3*t6*t8*t11*t16-t3*t6*t8*t11*t18-t4*t7*t8*t13*t16-t4*t7*t8*t13*t18+t5*t6*t10*t14*t20+t8*t10*t12*t13*t16+t5*t10*t14*t15*t16+t5*t11*t13*t15*t16+t8*t10*t12*t13*t18+t8*t11*t12*t14*t16+t4*t8*t13*t16*t21+t5*t10*t14*t15*t18+t5*t11*t13*t15*t18+t8*t11*t12*t14*t18+t4*t8*t13*t18*t21-t4*t14*t15*t16*t24-t4*t14*t15*t18*t24+t4*t6*t15*t16*t58+t4*t6*t15*t18*t58+t5*t6*t7*t8*t11*t16+t5*t6*t7*t8*t11*t18-t3*t7*t11*t13*t15*t16-t6*t7*t10*t12*t15*t16-t3*t7*t11*t13*t15*t18-t6*t7*t10*t12*t15*t18)*(-1.0/4.0);
  A0[5][2] = (t227*(t9*t10+t5*t8*t14-t12*t13*t15+t5*t8*t28-t7*t12*t23+t13*t14*t25+t7*t22*t24+t13*t14*t29+t4*t6*t8*t10-t6*t7*t8*t12+t5*t6*t14*t23-t6*t14*t21*t22-t5*t7*t15*t43+t4*t7*t10*t13*t15-t10*t11*t12*t14*t15))/4.0;
  A0[5][3] = t227*(-t84-t6*t15+t7*t38+t7*t41+t20*t30+t20*t57+t7*t8*t13-t8*t13*t21+t6*t14*t27+t6*t15*t30+t14*t15*t24-t8*t13*t42+t6*t15*t56+t6*t14*t61+t14*t15*t63)*(-1.0/4.0);
  A0[5][4] = t231*(t145+t8*t14+t8*t28+t8*t51+t8*t64+t6*t14*t23-t7*t15*t43+t13*t14*t38-t7*t15*t44+t13*t14*t41+t13*t14*t48+t7*t15*t55+t6*t14*t59)*(-1.0/4.0);
  A0[5][5] = t178*t228*(-1.0/4.0)+(t141*t229*(-t158+t216+t8*(t121+t7*(t28-t128))))/4.0-(t174*t224*t229)/4.0;
  A0[5][6] = (t216*t228)/4.0+(t179*t229*(-t158+t216+t8*(t121+t7*(t28-t128))))/4.0-(t224*t229*(t189+t7*(t33-t119)))/4.0;
  A0[6][0] = t228*(-1.0/4.0);
  A0[6][1] = t229*(t2*t15*t44+t8*t9*t44-t2*t8*t14*t21-t7*t11*t12*t16-t4*t13*t14*t16-t7*t11*t12*t18-t4*t13*t14*t18+t6*t8*t10*t25+t2*t7*t8*t36+t6*t10*t15*t22+t9*t14*t15*t21+t7*t9*t15*t64+t5*t6*t11*t14*t16+t5*t6*t11*t14*t18-t5*t8*t10*t13*t23-t7*t8*t10*t13*t22-t5*t10*t13*t15*t20-t8*t10*t12*t14*t20+t7*t10*t13*t15*t25+t10*t12*t14*t15*t23-t5*t6*t7*t8*t10*t20+t5*t6*t7*t10*t15*t23)*(-1.0/4.0);
  A0[6][2] = t227*(-t3+t5*t7+t6*t12*t14+t6*t8*t22-t6*t15*t25-t6*t15*t29+t5*t7*t52+t5*t7*t53+t6*t8*t60-t5*t8*t13*t20+t7*t8*t13*t25+t5*t13*t15*t23+t7*t8*t13*t29+t7*t13*t15*t22+t8*t12*t14*t23+t12*t14*t15*t20-t8*t13*t21*t25-t8*t14*t22*t24-t13*t15*t21*t22+t6*t15*t25*t30+t14*t15*t24*t25+t6*t8*t22*t58+t7*t13*t15*t60)*(-1.0/4.0);
  A0[6][3] = t227*(t10*t11+t13*t14-t13*t15*t27+t8*t13*t39+t8*t14*t38+t8*t13*t40+t13*t15*t33+t8*t14*t41+t14*t15*t34+t8*t14*t48+t14*t15*t45-t8*t23*t44-t14*t15*t50-t15*t20*t44-t6*t7*t8*t27+t6*t7*t8*t33-t6*t7*t15*t39-t6*t7*t15*t40+t7*t15*t23*t36+t7*t8*t20*t64)*(-1.0/4.0);
  A0[6][4] = t231*(-t7+t86-t7*t52-t7*t53+t7*t66-t7*t69-t7*t70-t7*t74+t7*t80+t6*t8*t26+t8*t13*t20-t13*t15*t23+t8*t13*t37+t6*t15*t38+t13*t15*t31+t6*t15*t41+t6*t8*t50+t6*t15*t48+t6*t8*t62+t13*t15*t23*t30+t7*t13*t15*t62+t8*t13*t20*t58)*(-1.0/4.0);
  A0[6][5] = t231*(-t43-t44+t55+t7*t8*t27+t7*t15*t39+t7*t15*t40+t7*t8*t49+t7*t8*t61+t7*t15*t77+t8*t13*t14*t23+t6*t14*t15*t26+t13*t14*t15*t20-t6*t8*t14*t38-t6*t8*t14*t41-t6*t8*t14*t48+t13*t14*t15*t37+t6*t14*t15*t50+t8*t13*t14*t59+t6*t14*t15*t62)*(-1.0/4.0);
  A0[6][6] = (t179*t228)/4.0-(t229*(t189+t7*(t33-t119))*(t156+t189+t15*(t121+t7*(t28-t128))+t7*(t33-t119)))/4.0-(t216*t229*(-t158+t216+t8*(t121+t7*(t28-t128))))/4.0;

  // auto genetated code end

  for(int i=0;i<7;i++)
      for(int j=0;j<7;j++)
        jacobian(i,j) = A0[i][j];

}

void HessianCal::getAnalyticalJacobianOmega(const vector<double> &qs, Eigen::Matrix<double,6,7> &jacobian)
{
  double q1 = qs[0];
  double q2 = qs[1];
  double q3 = qs[2];
  double q4 = qs[3];
  double q5 = qs[4];
  double q6 = qs[5];
  double q7 = qs[6];

  double A0[6][7];
  memset(A0,0,sizeof(A0));

  double t2,t3,t4,t5,t6,t7,t8,t9,t10,t11,t12,t13,t14,t15,t16,t17,t18,t19,t20,t21,t22,t23,t24,t25,t26,t27,t28,t29,t30,t31,t32,t33,t34,t35,t36,t37,t38,t39,t40,t41,t42,t43,t44,t45,t46,t47,t48,t49,t50;
  double t51,t52,t53,t54,t55,t56,t57,t58,t59,t60,t61,t62,t63,t64,t65,t66,t67,t68,t69,t70,t71,t72,t73,t74,t75,t76,t77,t78,t79,t80,t81,t82,t83;

  // t2 = cos(q1);
  // t3 = cos(q2);
  // t4 = cos(q3);
  // t5 = cos(q4);
  // t6 = cos(q5);
  // t7 = cos(q6);
  // t8 = sin(q1);
  // t9 = sin(q2);
  // t10 = sin(q3);
  // t11 = sin(q4);
  // t12 = sin(q5);
  // t13 = sin(q6);
  // t14 = t2*t4;
  // t15 = t3*t5;
  // t16 = t2*t10;
  // t17 = t4*t8;
  // t18 = t3*t11;
  // t19 = t8*t10;
  // t20 = t8*t9*t11;
  // t21 = t9*t10*t12;
  // t25 = t2*t5*t9;
  // t26 = t4*t5*t9;
  // t28 = t2*t9*t11;
  // t29 = t5*t8*t9;
  // t30 = t4*t9*t11;
  // t31 = t6*t9*t10;
  // t34 = t3*(4.1E+1/1.0E+2);
  // t39 = t9*t10*9.8E-3;
  // t22 = t3*t14;
  // t23 = t3*t16;
  // t24 = t3*t17;
  // t27 = t3*t19;
  // t32 = -t20;
  // t33 = -t21;
  // t37 = -t25;
  // t38 = -t26;
  // t40 = -t39;
  // t43 = t15+t30;
  // t44 = t15*3.111E-1;
  // t53 = t30*3.111E-1;
  // t35 = -t23;
  // t36 = -t24;
  // t41 = t14+t27;
  // t42 = t19+t22;
  // t47 = t18+t38;
  // t48 = -t44;
  // t61 = -t53;
  // t64 = t7*t43*2.638E-1;
  // t45 = t16+t36;
  // t46 = t17+t35;
  // t49 = t5*t42;
  // t50 = t6*t41;
  // t51 = t11*t42;
  // t52 = t12*t41;
  // t56 = t6*t47;
  // t60 = t12*t47;
  // t54 = t5*t45;
  // t55 = t6*t46;
  // t57 = t11*t45;
  // t58 = t12*t46;
  // t59 = -t52;
  // t63 = t28+t49;
  // t66 = t31+t60;
  // t67 = t37+t51;
  // t71 = t33+t56;
  // t74 = t7*(t25-t51)*(-2.638E-1);
  // t76 = t13*(t21-t56)*(-2.638E-1);
  // t62 = -t58;
  // t65 = t29+t57;
  // t68 = t6*t63;
  // t69 = t12*t63;
  // t70 = t32+t54;
  // t72 = -t6*(t20-t54);
  // t73 = -t12*(t20-t54);
  // t81 = t13*(t52+t6*(t20-t54))*(-2.638E-1);
  // t82 = t64+t76;
  // t75 = t7*t65*2.638E-1;
  // t77 = t62+t68;
  // t78 = t59+t72;
  // t79 = t13*(t58-t68)*(-2.638E-1);
  // t80 = t13*(t58-t68)*2.638E-1;
  // t83 = t34+t40+t48+t61+t82;
  // A0[0][0] = t14*(-9.8E-3)-t27*9.8E-3+t29*3.111E-1+t57*3.111E-1-t75+t81-t8*t9*(4.1E+1/1.0E+2);
  // A0[0][1] = -t2*(-t34+t39+t44+t53-t64+t13*(t21-t56)*2.638E-1);
  // A0[0][2] = t19*9.8E-3+t22*9.8E-3+t11*t17*3.111E-1-t16*t18*3.111E-1-t7*t11*t17*2.638E-1+t7*t16*t18*2.638E-1+t12*t13*t19*2.638E-1+t12*t13*t22*2.638E-1+t5*t6*t13*t17*2.638E-1-t6*t13*t15*t16*2.638E-1;
  // A0[0][3] = t28*3.111E-1+t5*t19*3.111E-1-t7*t28*2.638E-1+t14*t44-t5*t7*t19*2.638E-1-t7*t14*t15*2.638E-1+t6*t13*t25*2.638E-1-t6*t11*t13*t19*2.638E-1-t6*t13*t14*t18*2.638E-1;
  // A0[0][4] = t13*(t6*t17+t12*t28+t6*t35+t5*t12*t19+t12*t14*t15)*(-2.638E-1);
  // A0[0][5] = t82*(t50+t73)+t66*(t75+t13*(t52+t6*(t20-t54))*2.638E-1);
  // A0[1][0] = t17*9.8E-3-t23*9.8E-3+t25*3.111E-1-t51*3.111E-1+t74+t80-t2*t9*(4.1E+1/1.0E+2);
  // A0[1][1] = t8*(-t34+t39+t44+t53-t64+t13*(t21-t56)*2.638E-1);
  // A0[1][2] = t16*9.8E-3-t24*9.8E-3+t11*t14*3.111E-1+t18*t19*3.111E-1-t7*t11*t14*2.638E-1+t12*t13*t16*2.638E-1-t7*t18*t19*2.638E-1-t12*t13*t24*2.638E-1+t5*t6*t13*t14*2.638E-1+t6*t13*t15*t19*2.638E-1;
  // A0[1][3] = t20*(-3.111E-1)+t5*t16*3.111E-1+t7*t20*2.638E-1-t15*t17*3.111E-1-t5*t7*t16*2.638E-1+t7*t15*t17*2.638E-1-t6*t13*t29*2.638E-1-t6*t11*t13*t16*2.638E-1+t6*t13*t17*t18*2.638E-1;
  // A0[1][4] = t13*(t6*t14+t6*t27+t12*t32+t5*t12*t16-t12*t15*t17)*(-2.638E-1);
  // A0[1][5] = -t82*(t55+t69)+t66*(t79+t7*(t25-t51)*2.638E-1);
  // A0[2][1] = t9*(4.1E+1/1.0E+2)+t3*t10*9.8E-3-t5*t9*3.111E-1+t4*t18*3.111E-1+t5*t7*t9*2.638E-1-t4*t7*t18*2.638E-1+t3*t10*t12*t13*2.638E-1+t4*t6*t13*t15*2.638E-1+t6*t9*t11*t13*2.638E-1;
  // A0[2][2] = (t9*(t4*9.8E+1-t10*t11*3.111E+3+t7*t10*t11*2.638E+3+t4*t12*t13*2.638E+3-t5*t6*t10*t13*2.638E+3))/1.0E+4;
  // A0[2][3] = t18*(-3.111E-1)+t26*3.111E-1+t7*t18*2.638E-1-t7*t26*2.638E-1-t6*t13*t15*2.638E-1-t6*t13*t30*2.638E-1;
  // A0[2][4] = t13*(t31+t12*t18+t12*t38)*2.638E-1;
  // A0[2][5] = t7*t21*2.638E-1+t13*t15*2.638E-1+t13*t30*2.638E-1-t6*t7*t18*2.638E-1+t6*t7*t26*2.638E-1;
  // A0[3][1] = -t8;
  // A0[3][2] = -t2*t9;
  // A0[3][3] = t46;
  // A0[3][4] = t25-t51;
  // A0[3][5] = -t55-t69;
  // A0[3][6] = -t7*(t25-t51)+t13*(t58-t68);
  // A0[4][1] = -t2;
  // A0[4][2] = t8*t9;
  // A0[4][3] = t41;
  // A0[4][4] = -t65;
  // A0[4][5] = -t50+t12*(t20-t54);
  // A0[4][6] = t13*(t52+t6*(t20-t54))+t7*t65;
  // A0[5][0] = -1.0;
  // A0[5][2] = t3;
  // A0[5][3] = -t9*t10;
  // A0[5][4] = -t43;
  // A0[5][5] = t66;
  // A0[5][6] = t7*t43-t13*(t21-t56);

    t2 = cos(q1);
  t3 = cos(q2);
  t4 = cos(q3);
  t5 = cos(q4);
  t6 = cos(q5);
  t7 = cos(q6);
  t8 = sin(q1);
  t9 = sin(q2);
  t10 = sin(q3);
  t11 = sin(q4);
  t12 = sin(q5);
  t13 = sin(q6);
  t14 = t2*t4;
  t15 = t3*t5;
  t16 = t2*t10;
  t17 = t4*t8;
  t18 = t3*t11;
  t19 = t8*t10;
  t20 = t8*t9*t11;
  t21 = t9*t10*t12;
  t25 = t2*t5*t9;
  t26 = t4*t5*t9;
  t28 = t2*t9*t11;
  t29 = t5*t8*t9;
  t30 = t4*t9*t11;
  t31 = t6*t9*t10;
  t34 = t3*(4.1E+1/1.0E+2);
  t39 = t9*t10*9.8E-3;
  t22 = t3*t14;
  t23 = t3*t16;
  t24 = t3*t17;
  t27 = t3*t19;
  t32 = -t20;
  t33 = -t21;
  t37 = -t25;
  t38 = -t26;
  t40 = -t39;
  t43 = t15+t30;
  t44 = t15*3.111E-1;
  t53 = t30*3.111E-1;
  t35 = -t23;
  t36 = -t24;
  t41 = t14+t27;
  t42 = t19+t22;
  t47 = t18+t38;
  t48 = -t44;
  t61 = -t53;
  t64 = t7*t43*3.138E-1;
  t45 = t16+t36;
  t46 = t17+t35;
  t49 = t5*t42;
  t50 = t6*t41;
  t51 = t11*t42;
  t52 = t12*t41;
  t56 = t6*t47;
  t60 = t12*t47;
  t54 = t5*t45;
  t55 = t6*t46;
  t57 = t11*t45;
  t58 = t12*t46;
  t59 = -t52;
  t63 = t28+t49;
  t66 = t31+t60;
  t67 = t37+t51;
  t71 = t33+t56;
  t74 = t7*(t25-t51)*(-3.138E-1);
  t76 = t13*(t21-t56)*(-3.138E-1);
  t62 = -t58;
  t65 = t29+t57;
  t68 = t6*t63;
  t69 = t12*t63;
  t70 = t32+t54;
  t72 = -t6*(t20-t54);
  t73 = -t12*(t20-t54);
  t81 = t13*(t52+t6*(t20-t54))*(-3.138E-1);
  t82 = t64+t76;
  t75 = t7*t65*3.138E-1;
  t77 = t62+t68;
  t78 = t59+t72;
  t79 = t13*(t58-t68)*(-3.138E-1);
  t80 = t13*(t58-t68)*3.138E-1;
  t83 = t34+t40+t48+t61+t82;
  A0[0][0] = t14*(-9.8E-3)-t27*9.8E-3+t29*3.111E-1+t57*3.111E-1-t75+t81-t8*t9*(4.1E+1/1.0E+2);
  A0[0][1] = -t2*(-t34+t39+t44+t53-t64+t13*(t21-t56)*3.138E-1);
  A0[0][2] = t19*9.8E-3+t22*9.8E-3+t11*t17*3.111E-1-t16*t18*3.111E-1-t7*t11*t17*3.138E-1+t7*t16*t18*3.138E-1+t12*t13*t19*3.138E-1+t12*t13*t22*3.138E-1+t5*t6*t13*t17*3.138E-1-t6*t13*t15*t16*3.138E-1;
  A0[0][3] = t28*3.111E-1+t5*t19*3.111E-1-t7*t28*3.138E-1+t14*t44-t5*t7*t19*3.138E-1-t7*t14*t15*3.138E-1+t6*t13*t25*3.138E-1-t6*t11*t13*t19*3.138E-1-t6*t13*t14*t18*3.138E-1;
  A0[0][4] = t13*(t6*t17+t12*t28+t6*t35+t5*t12*t19+t12*t14*t15)*(-3.138E-1);
  A0[0][5] = t82*(t50+t73)+t66*(t75+t13*(t52+t6*(t20-t54))*3.138E-1);
  A0[1][0] = t17*9.8E-3-t23*9.8E-3+t25*3.111E-1-t51*3.111E-1+t74+t80-t2*t9*(4.1E+1/1.0E+2);
  A0[1][1] = t8*(-t34+t39+t44+t53-t64+t13*(t21-t56)*3.138E-1);
  A0[1][2] = t16*9.8E-3-t24*9.8E-3+t11*t14*3.111E-1+t18*t19*3.111E-1-t7*t11*t14*3.138E-1+t12*t13*t16*3.138E-1-t7*t18*t19*3.138E-1-t12*t13*t24*3.138E-1+t5*t6*t13*t14*3.138E-1+t6*t13*t15*t19*3.138E-1;
  A0[1][3] = t20*(-3.111E-1)+t5*t16*3.111E-1+t7*t20*3.138E-1-t15*t17*3.111E-1-t5*t7*t16*3.138E-1+t7*t15*t17*3.138E-1-t6*t13*t29*3.138E-1-t6*t11*t13*t16*3.138E-1+t6*t13*t17*t18*3.138E-1;
  A0[1][4] = t13*(t6*t14+t6*t27+t12*t32+t5*t12*t16-t12*t15*t17)*(-3.138E-1);
  A0[1][5] = -t82*(t55+t69)+t66*(t79+t7*(t25-t51)*3.138E-1);
  A0[2][1] = t9*(4.1E+1/1.0E+2)+t3*t10*9.8E-3-t5*t9*3.111E-1+t4*t18*3.111E-1+t5*t7*t9*3.138E-1-t4*t7*t18*3.138E-1+t3*t10*t12*t13*3.138E-1+t4*t6*t13*t15*3.138E-1+t6*t9*t11*t13*3.138E-1;
  A0[2][2] = (t9*(t4*9.8E+1-t10*t11*3.111E+3+t7*t10*t11*3.138E+3+t4*t12*t13*3.138E+3-t5*t6*t10*t13*3.138E+3))/1.0E+4;
  A0[2][3] = t18*(-3.111E-1)+t26*3.111E-1+t7*t18*3.138E-1-t7*t26*3.138E-1-t6*t13*t15*3.138E-1-t6*t13*t30*3.138E-1;
  A0[2][4] = t13*(t31+t12*t18+t12*t38)*3.138E-1;
  A0[2][5] = t7*t21*3.138E-1+t13*t15*3.138E-1+t13*t30*3.138E-1-t6*t7*t18*3.138E-1+t6*t7*t26*3.138E-1;
  A0[3][1] = -t8;
  A0[3][2] = -t2*t9;
  A0[3][3] = t46;
  A0[3][4] = t25-t51;
  A0[3][5] = -t55-t69;
  A0[3][6] = -t7*(t25-t51)+t13*(t58-t68);
  A0[4][1] = -t2;
  A0[4][2] = t8*t9;
  A0[4][3] = t41;
  A0[4][4] = -t65;
  A0[4][5] = -t50+t12*(t20-t54);
  A0[4][6] = t13*(t52+t6*(t20-t54))+t7*t65;
  A0[5][0] = -1.0;
  A0[5][2] = t3;
  A0[5][3] = -t9*t10;
  A0[5][4] = -t43;
  A0[5][5] = t66;
  A0[5][6] = t7*t43-t13*(t21-t56);

  for(int i=0;i<6;i++)
      for(int j=0;j<7;j++)
        jacobian(i,j) = A0[i][j];
}

void HessianCal::getEEFTransform(const vector<double> &qs, Eigen::Matrix3d &rotm, Eigen::Vector3d &translation)
{
  double q1 = qs[0];
  double q2 = qs[1];
  double q3 = qs[2];
  double q4 = qs[3];
  double q5 = qs[4];
  double q6 = qs[5];
  double q7 = qs[6];

  double t2,t3,t4,t5,t6,t7,t8,t9,t10,t11,t12,t13,t14,t15,t16,t17,t18,t19,t20,t21,t22,t23,t24,t25,t26,t27,t28,t29,t30,t31,t32,t33,t34,t35,t36,t37,t38,t39,t40,t41,t42,t43,t44,t45,t46,t47,t48,t49,t50;
  double t51,t52,t53,t54,t55,t56,t57,t58,t59,t60,t61,t62,t63,t64,t65,t66,t67,t68,t69,t70,t71,t72,t73,t74,t75,t76,t77,t78,t79,t80,t81;

  // t2 = cos(q1);
  // t3 = cos(q2);
  // t4 = cos(q3);
  // t5 = cos(q4);
  // t6 = cos(q5);
  // t7 = cos(q6);
  // t8 = cos(q7);
  // t9 = sin(q1);
  // t10 = sin(q2);
  // t11 = sin(q3);
  // t12 = sin(q4);
  // t13 = sin(q5);
  // t14 = sin(q6);
  // t15 = sin(q7);
  // t16 = t2*t4;
  // t17 = t3*t5;
  // t18 = t2*t11;
  // t19 = t4*t9;
  // t20 = t3*t12;
  // t21 = t9*t11;
  // t22 = t9*t10*t12;
  // t23 = t10*t11*t13;
  // t27 = t2*t5*t10;
  // t28 = t4*t5*t10;
  // t30 = t2*t10*t12;
  // t31 = t5*t9*t10;
  // t32 = t4*t10*t12;
  // t33 = t6*t10*t11;
  // t24 = t3*t16;
  // t25 = t3*t18;
  // t26 = t3*t19;
  // t29 = t3*t21;
  // t34 = -t22;
  // t35 = -t23;
  // t38 = -t27;
  // t39 = -t28;
  // t42 = t17+t32;
  // t36 = -t25;
  // t37 = -t26;
  // t40 = t16+t29;
  // t41 = t21+t24;
  // t45 = t20+t39;
  // t50 = t14*t42;
  // t43 = t18+t37;
  // t44 = t19+t36;
  // t46 = t5*t41;
  // t47 = t6*t40;
  // t48 = t12*t41;
  // t49 = t13*t40;
  // t53 = t6*t45;
  // t57 = t13*t45;
  // t58 = -t50;
  // t51 = t5*t43;
  // t52 = t6*t44;
  // t54 = t12*t43;
  // t55 = t13*t44;
  // t56 = -t49;
  // t60 = t30+t46;
  // t62 = t33+t57;
  // t63 = t38+t48;
  // t67 = t35+t53;
  // t68 = -t14*(t27-t48);
  // t71 = -t7*(t23-t53);
  // t59 = -t55;
  // t61 = t31+t54;
  // t64 = t6*t60;
  // t65 = t13*t60;
  // t66 = t34+t51;
  // t70 = -t6*(t22-t51);
  // t72 = -t13*(t22-t51);
  // t77 = t58+t71;
  // t79 = -t7*(t49+t6*(t22-t51));
  // t69 = t14*t61;
  // t73 = t52+t65;
  // t74 = t59+t64;
  // t75 = t47+t72;
  // t76 = t56+t70;
  // t78 = -t7*(t55-t64);
  // t80 = t68+t78;
  // t81 = t69+t79;
  // rotm(0,0) = t15*(t14*(t27-t48)+t7*(t55-t64))+t8*t73;
  // rotm(0,1) = -t8*(t14*(t27-t48)+t7*(t55-t64))+t15*t73;
  // rotm(0,2) = t7*(t27-t48)-t14*(t55-t64);
  // translation(0) = t19*(-9.8E-3)+t25*9.8E-3-t27*3.111E-1+t48*3.111E-1+t2*t10*(4.1E+1/1.0E+2)+t7*(t27-t48)*2.638E-1-t14*(t55-t64)*2.638E-1;
  // rotm(1,0) = t8*t75-t15*t81;
  // rotm(1,1) = t8*t81+t15*t75;
  // rotm(1,2) = -t14*(t49+t6*(t22-t51))-t7*t61;
  // translation(1) = t16*(-9.8E-3)-t29*9.8E-3+t31*3.111E-1+t54*3.111E-1-t14*(t49+t6*(t22-t51))*2.638E-1-t9*t10*(4.1E+1/1.0E+2)-t7*t61*2.638E-1;
  // rotm(2,0) = -t15*(t50+t7*(t23-t53))-t8*t62;
  // rotm(2,1) = t8*(t50+t7*(t23-t53))-t15*t62;
  // rotm(2,2) = -t7*t42+t14*(t23-t53);
  // translation(2) = t3*(-4.1E+1/1.0E+2)+t17*3.111E-1+t32*3.111E-1+t10*t11*9.8E-3-t7*t42*2.638E-1+t14*(t23-t53)*2.638E-1+2.755E-1;
  
  t2 = cos(q1);
  t3 = cos(q2);
  t4 = cos(q3);
  t5 = cos(q4);
  t6 = cos(q5);
  t7 = cos(q6);
  t8 = cos(q7);
  t9 = sin(q1);
  t10 = sin(q2);
  t11 = sin(q3);
  t12 = sin(q4);
  t13 = sin(q5);
  t14 = sin(q6);
  t15 = sin(q7);
  t16 = t2*t4;
  t17 = t3*t5;
  t18 = t2*t11;
  t19 = t4*t9;
  t20 = t3*t12;
  t21 = t9*t11;
  t22 = t9*t10*t12;
  t23 = t10*t11*t13;
  t27 = t2*t5*t10;
  t28 = t4*t5*t10;
  t30 = t2*t10*t12;
  t31 = t5*t9*t10;
  t32 = t4*t10*t12;
  t33 = t6*t10*t11;
  t24 = t3*t16;
  t25 = t3*t18;
  t26 = t3*t19;
  t29 = t3*t21;
  t34 = -t22;
  t35 = -t23;
  t38 = -t27;
  t39 = -t28;
  t42 = t17+t32;
  t36 = -t25;
  t37 = -t26;
  t40 = t16+t29;
  t41 = t21+t24;
  t45 = t20+t39;
  t50 = t14*t42;
  t43 = t18+t37;
  t44 = t19+t36;
  t46 = t5*t41;
  t47 = t6*t40;
  t48 = t12*t41;
  t49 = t13*t40;
  t53 = t6*t45;
  t57 = t13*t45;
  t58 = -t50;
  t51 = t5*t43;
  t52 = t6*t44;
  t54 = t12*t43;
  t55 = t13*t44;
  t56 = -t49;
  t60 = t30+t46;
  t62 = t33+t57;
  t63 = t38+t48;
  t67 = t35+t53;
  t68 = -t14*(t27-t48);
  t71 = -t7*(t23-t53);
  t59 = -t55;
  t61 = t31+t54;
  t64 = t6*t60;
  t65 = t13*t60;
  t66 = t34+t51;
  t70 = -t6*(t22-t51);
  t72 = -t13*(t22-t51);
  t77 = t58+t71;
  t79 = -t7*(t49+t6*(t22-t51));
  t69 = t14*t61;
  t73 = t52+t65;
  t74 = t59+t64;
  t75 = t47+t72;
  t76 = t56+t70;
  t78 = -t7*(t55-t64);
  t80 = t68+t78;
  t81 = t69+t79;
  rotm(0,0) = t15*(t14*(t27-t48)+t7*(t55-t64))+t8*t73;
  rotm(0,1) = -t8*(t14*(t27-t48)+t7*(t55-t64))+t15*t73;
  rotm(0,2) = t7*(t27-t48)-t14*(t55-t64);
  translation(0) = t19*(-9.8E-3)+t25*9.8E-3-t27*3.111E-1+t48*3.111E-1+t2*t10*(4.1E+1/1.0E+2)+t7*(t27-t48)*3.138E-1-t14*(t55-t64)*3.138E-1;
  rotm(1,0) = t8*t75-t15*t81;
  rotm(1,1) = t8*t81+t15*t75;
  rotm(1,2) = -t14*(t49+t6*(t22-t51))-t7*t61;
  translation(1) = t16*(-9.8E-3)-t29*9.8E-3+t31*3.111E-1+t54*3.111E-1-t14*(t49+t6*(t22-t51))*3.138E-1-t9*t10*(4.1E+1/1.0E+2)-t7*t61*3.138E-1;
  rotm(2,0) = -t15*(t50+t7*(t23-t53))-t8*t62;
  rotm(2,1) = t8*(t50+t7*(t23-t53))-t15*t62;
  rotm(2,2) = -t7*t42+t14*(t23-t53);
  translation(2) = t3*(-4.1E+1/1.0E+2)+t17*3.111E-1+t32*3.111E-1+t10*t11*9.8E-3-t7*t42*3.138E-1+t14*(t23-t53)*3.138E-1+2.755E-1;
  //A0[3][3] = 1.0;

  return;
}

void HessianCal::rotm2quat(const Eigen::Matrix3d &rotm, Eigen::Vector4d &quat)
{
  double m00 = rotm(0,0);
  double m11 = rotm(1,1);
  double m22 = rotm(2,2);
  double trace = m00+m11+m22;
  if(trace>0)
  {
    double S = std::sqrt(trace+1)*2;
    quat(0) = 0.25*S;
    quat(1) = (rotm(2,1)-rotm(1,2))/S;
    quat(2) = (rotm(0,2)-rotm(2,0))/S;
    quat(3) = (rotm(1,0)-rotm(0,1))/S;
  }
  else if(m00>m11 && m00>m22)
  {
    double S = std::sqrt(1+m00-m11-m22)*2;
    quat(0) = (rotm(2,1)-rotm(1,2))/S;
    quat(1) = 0.25*S;
    quat(2) = (rotm(0,1)+rotm(1,0))/S;
    quat(3) = (rotm(0,2)+rotm(2,0))/S;
  }
  else if(m11>m22)
  {
    double S = std::sqrt(1+m11-m00-m22)*2;
    quat(0) = (rotm(0,2)-rotm(2,0))/S;
    quat(1) = (rotm(0,1)+rotm(1,0))/S;
    quat(2) = 0.25*S;
    quat(3) = (rotm(1,2)+rotm(2,1))/S;
  }
  else
  {
    double S = std::sqrt(1+m22-m00-m11)*2;
    quat(0) = (rotm(1,0)-rotm(0,1))/S;
    quat(1) = (rotm(0,2)+rotm(2,0))/S;
    quat(2) = (rotm(1,2)+rotm(2,1))/S;
    quat(3) = 0.25*S;
  }

}

void HessianCal::getPosition(const vector<double> &qs, Vector7d &eef_position)
{

  // temp variables used for matlab auto generated code

  double q1 = qs[0];
  double q2 = qs[1];
  double q3 = qs[2];
  double q4 = qs[3];
  double q5 = qs[4];
  double q6 = qs[5];
  double q7 = qs[6];

  double t2,t3,t4,t5,t6,t7,t8,t9,t10,t11,t12,t13,t14,t15,t16,t17,t18,t19,t20,t21,t22,t23,t24,t25,t26,t27,t28,t29,t30,t31,t32,t33,t34,t35,t36,t37,t38,t39,t40,t41,t42,t43,t44,t45,t46,t47,t48,t49,t50;
  double t51,t52,t53,t54,t55,t56,t57,t58,t59,t60,t61,t62,t63,t64,t65,t66,t67,t68,t69,t70,t71,t72,t73,t74,t75,t76,t77,t78,t79,t80,t81,t82,t83,t84,t85,t86,t87,t88,t89,t90,t91,t92;

  double A0[7][1];
  memset(A0,0,sizeof(A0));

  // auto generated code
  // t2 = cos(q1);
  // t3 = cos(q2);
  // t4 = cos(q3);
  // t5 = cos(q4);
  // t6 = cos(q5);
  // t7 = cos(q6);
  // t8 = cos(q7);
  // t9 = sin(q1);
  // t10 = sin(q2);
  // t11 = sin(q3);
  // t12 = sin(q4);
  // t13 = sin(q5);
  // t14 = sin(q6);
  // t15 = sin(q7);
  // t16 = t2*t4;
  // t17 = t3*t5;
  // t18 = t2*t11;
  // t19 = t4*t9;
  // t20 = t3*t12;
  // t21 = t9*t11;
  // t22 = t9*t10*t12;
  // t23 = t10*t11*t13;
  // t27 = t2*t5*t10;
  // t28 = t4*t5*t10;
  // t30 = t2*t10*t12;
  // t31 = t5*t9*t10;
  // t32 = t4*t10*t12;
  // t33 = t6*t10*t11;
  // t24 = t3*t16;
  // t25 = t3*t18;
  // t26 = t3*t19;
  // t29 = t3*t21;
  // t34 = -t22;
  // t35 = -t23;
  // t38 = -t27;
  // t39 = -t28;
  // t42 = t17+t32;
  // t36 = -t25;
  // t37 = -t26;
  // t40 = t16+t29;
  // t41 = t21+t24;
  // t45 = t20+t39;
  // t48 = t7*t42;
  // t51 = t14*t42;
  // t43 = t18+t37;
  // t44 = t19+t36;
  // t46 = t5*t41;
  // t47 = t6*t40;
  // t49 = t12*t41;
  // t50 = t13*t40;
  // t54 = t6*t45;
  // t55 = -t48;
  // t59 = t13*t45;
  // t60 = -t51;
  // t52 = t5*t43;
  // t53 = t6*t44;
  // t56 = t12*t43;
  // t57 = t13*t44;
  // t58 = -t50;
  // t62 = t30+t46;
  // t64 = t33+t59;
  // t65 = t38+t49;
  // t69 = t35+t54;
  // t70 = -t14*(t27-t49);
  // t73 = -t7*(t23-t54);
  // t75 = -t14*(t23-t54);
  // t76 = t14*(t23-t54);
  // t61 = -t57;
  // t63 = t31+t56;
  // t66 = t6*t62;
  // t67 = t13*t62;
  // t68 = t34+t52;
  // t72 = -t6*(t22-t52);
  // t74 = -t13*(t22-t52);
  // t82 = t60+t73;
  // t85 = -t7*(t50+t6*(t22-t52));
  // t71 = t14*t63;
  // t77 = t53+t67;
  // t78 = t61+t66;
  // t79 = t47+t74;
  // t81 = t58+t72;
  // t83 = -t7*(t57-t66);
  // t88 = -t15*(t14*(t27-t49)+t7*(t57-t66));
  // t89 = t15*(t14*(t27-t49)+t7*(t57-t66));
  // t80 = t8*t77;
  // t84 = t15*t79;
  // t86 = t70+t83;
  // t87 = t71+t85;
  // t90 = t8*t87;
  // t91 = t55+t76+t80+t84+t89+t90+1.0;
  // t92 = 1.0/sqrt(t91);

  // // // TODO handle negative sum of diagonal element of rotation matrix
  // // if(t91 < 0)


  // A0[0][0] = t19*(-9.8E-3)+t25*9.8E-3-t27*3.111E-1+t49*3.111E-1+t2*t10*(4.1E+1/1.0E+2)+t7*(t27-t49)*2.638E-1-t14*(t57-t66)*2.638E-1;
  // A0[1][0] = t16*(-9.8E-3)-t29*9.8E-3+t31*3.111E-1+t56*3.111E-1-t14*(t50+t6*(t22-t52))*2.638E-1-t9*t10*(4.1E+1/1.0E+2)-t7*t63*2.638E-1;
  // A0[2][0] = t3*(-4.1E+1/1.0E+2)+t17*3.111E-1+t32*3.111E-1-t48*2.638E-1+t76*2.638E-1+t10*t11*9.8E-3+2.755E-1;
  // A0[3][0] = 1.0/(t92*2.0);
  // A0[4][0] = (t92*(t8*(t51+t7*(t23-t54))+t14*(t50+t6*(t22-t52))+t7*t63-t15*t64))/2.0;
  // A0[5][0] = (t92*(t15*(t51+t7*(t23-t54))+t8*t64+t7*(t27-t49)-t14*(t57-t66)))/2.0;
  // A0[6][0] = (t92*(t8*(t14*(t27-t49)+t7*(t57-t66))+t8*t79-t15*t77-t15*t87))/2.0;

  t2 = cos(q1);
  t3 = cos(q2);
  t4 = cos(q3);
  t5 = cos(q4);
  t6 = cos(q5);
  t7 = cos(q6);
  t8 = cos(q7);
  t9 = sin(q1);
  t10 = sin(q2);
  t11 = sin(q3);
  t12 = sin(q4);
  t13 = sin(q5);
  t14 = sin(q6);
  t15 = sin(q7);
  t16 = t2*t4;
  t17 = t3*t5;
  t18 = t2*t11;
  t19 = t4*t9;
  t20 = t3*t12;
  t21 = t9*t11;
  t22 = t9*t10*t12;
  t23 = t10*t11*t13;
  t27 = t2*t5*t10;
  t28 = t4*t5*t10;
  t30 = t2*t10*t12;
  t31 = t5*t9*t10;
  t32 = t4*t10*t12;
  t33 = t6*t10*t11;
  t24 = t3*t16;
  t25 = t3*t18;
  t26 = t3*t19;
  t29 = t3*t21;
  t34 = -t22;
  t35 = -t23;
  t38 = -t27;
  t39 = -t28;
  t42 = t17+t32;
  t36 = -t25;
  t37 = -t26;
  t40 = t16+t29;
  t41 = t21+t24;
  t45 = t20+t39;
  t48 = t7*t42;
  t51 = t14*t42;
  t43 = t18+t37;
  t44 = t19+t36;
  t46 = t5*t41;
  t47 = t6*t40;
  t49 = t12*t41;
  t50 = t13*t40;
  t54 = t6*t45;
  t55 = -t48;
  t59 = t13*t45;
  t60 = -t51;
  t52 = t5*t43;
  t53 = t6*t44;
  t56 = t12*t43;
  t57 = t13*t44;
  t58 = -t50;
  t62 = t30+t46;
  t64 = t33+t59;
  t65 = t38+t49;
  t69 = t35+t54;
  t70 = -t14*(t27-t49);
  t73 = -t7*(t23-t54);
  t75 = -t14*(t23-t54);
  t76 = t14*(t23-t54);
  t61 = -t57;
  t63 = t31+t56;
  t66 = t6*t62;
  t67 = t13*t62;
  t68 = t34+t52;
  t72 = -t6*(t22-t52);
  t74 = -t13*(t22-t52);
  t82 = t60+t73;
  t85 = -t7*(t50+t6*(t22-t52));
  t71 = t14*t63;
  t77 = t53+t67;
  t78 = t61+t66;
  t79 = t47+t74;
  t81 = t58+t72;
  t83 = -t7*(t57-t66);
  t88 = -t15*(t14*(t27-t49)+t7*(t57-t66));
  t89 = t15*(t14*(t27-t49)+t7*(t57-t66));
  t80 = t8*t77;
  t84 = t15*t79;
  t86 = t70+t83;
  t87 = t71+t85;
  t90 = t8*t87;
  t91 = t55+t76+t80+t84+t89+t90+1.0;
  t92 = 1.0/sqrt(t91);
  A0[0][0] = t19*(-9.8E-3)+t25*9.8E-3-t27*3.111E-1+t49*3.111E-1+t2*t10*(4.1E+1/1.0E+2)+t7*(t27-t49)*3.138E-1-t14*(t57-t66)*3.138E-1;
  A0[1][0] = t16*(-9.8E-3)-t29*9.8E-3+t31*3.111E-1+t56*3.111E-1-t14*(t50+t6*(t22-t52))*3.138E-1-t9*t10*(4.1E+1/1.0E+2)-t7*t63*3.138E-1;
  A0[2][0] = t3*(-4.1E+1/1.0E+2)+t17*3.111E-1+t32*3.111E-1-t48*3.138E-1+t76*3.138E-1+t10*t11*9.8E-3+2.755E-1;
  A0[3][0] = 1.0/(t92*2.0);
  A0[4][0] = (t92*(t8*(t51+t7*(t23-t54))+t14*(t50+t6*(t22-t52))+t7*t63-t15*t64))/2.0;
  A0[5][0] = (t92*(t15*(t51+t7*(t23-t54))+t8*t64+t7*(t27-t49)-t14*(t57-t66)))/2.0;
  A0[6][0] = (t92*(t8*(t14*(t27-t49)+t7*(t57-t66))+t8*t79-t15*t77-t15*t87))/2.0;

  for(int i=0;i<7;i++)
    eef_position(i) = A0[i][0];
}

void HessianCal::getAnalyJaco4Ref(const int link_index, const vector<double> &qs, Eigen::Matrix<double,3,7>& jacobian, const Eigen::Vector3d &ref)
{

  double t2,t3,t4,t5,t6,t7,t8,t9,t10,t11,t12,t13,t14,t15,t16,t17,t18,t19,t20,t21,t22,t23,t24,t25,t26,t27,t28,t29,t30,t31,t32,t33,t34,t35,t36,t37,t38,t39,t40,t41,t42,t43,t44,t45,t46,t47,t48,t49,t50;
  double t51,t52,t53,t54,t55,t56,t57,t58,t59,t60,t61,t62,t63,t64,t65,t66,t67,t68,t69,t70,t71,t72,t73,t74,t75,t76,t77,t78,t79,t80,t81,t82,t83,t84,t85,t86,t87;

  
  double q1 = qs[0];
  double q2 = qs[1];
  double q3 = qs[2];
  double q4 = qs[3];
  double q5 = qs[4];
  double x = ref(0);
  double y = ref(1);
  double z = ref(2);

  t2 = cos(q1);
  t3 = cos(q2);
  t4 = cos(q3);
  t5 = cos(q4);
  t6 = cos(q5);
  t7 = sin(q1);
  t8 = sin(q2);
  t9 = sin(q3);
  t10 = sin(q4);
  t11 = sin(q5);
  t12 = -z;
  t43 = z-2.755E-1;
  t13 = t2*t4;
  t14 = t3*t5;
  t15 = t2*t9;
  t16 = t4*t7;
  t17 = t3*t10;
  t18 = t7*t9;
  t19 = t7*t8*t10;
  t23 = t2*t5*t8;
  t24 = t4*t5*t8;
  t26 = t2*t8*t10;
  t27 = t5*t7*t8;
  t28 = t4*t8*t10;
  t29 = t6*t8*t9;
  t31 = t3*(4.1E+1/1.0E+2);
  t37 = t2*t8*(4.1E+1/1.0E+2);
  t38 = t7*t8*(4.1E+1/1.0E+2);
  t42 = t8*t9*9.8E-3;
  t20 = t3*t13;
  t21 = t3*t15;
  t22 = t3*t16;
  t25 = t3*t18;
  t30 = -t19;
  t34 = -t23;
  t35 = -t24;
  t36 = -t31;
  t39 = t13*9.8E-3;
  t40 = -t37;
  t41 = t16*9.8E-3;
  t44 = t38+y;
  t45 = -t42;
  t48 = t14+t28;
  t52 = t14*3.111E-1;
  t60 = t23*3.111E-1;
  t61 = t27*3.111E-1;
  t62 = t28*3.111E-1;
  t68 = t31+t43;
  t32 = -t21;
  t33 = -t22;
  t46 = t13+t25;
  t47 = t18+t20;
  t49 = t21*9.8E-3;
  t50 = t40+x;
  t51 = t25*9.8E-3;
  t55 = t17+t35;
  t67 = -t61;
  t80 = t45+t68;
  t85 = t12+t36+t42+t52+t62+2.755E-1;
  t53 = t15+t33;
  t54 = t16+t32;
  t56 = -t49;
  t57 = t5*t47;
  t58 = t6*t46;
  t59 = t10*t47;
  t66 = t11*t55;
  t81 = t39+t44+t51;
  t63 = t5*t53;
  t64 = t6*t54;
  t65 = t10*t53;
  t69 = t26+t57;
  t71 = t29+t66;
  t72 = t59*3.111E-1;
  t73 = t34+t59;
  t82 = t41+t50+t56;
  t70 = t27+t65;
  t74 = t11*t69;
  t75 = -t72;
  t76 = t30+t63;
  t77 = t65*3.111E-1;
  t79 = -t11*(t19-t63);
  t78 = -t77;
  t83 = t64+t74;
  t84 = t58+t79;
  t86 = t60+t75+t82;
  t87 = t67+t78+t81;

  for(int i=0;i<3;i++)
    for(int j=0;j<7;j++)
      jacobian(i,j) = 0;


  jacobian(0,0) = y;
  jacobian(1,0) = -x;
  jacobian(0,1) = -t2*t43;
  jacobian(1,1) = t7*t43;
  jacobian(2,1) = t2*x-t7*y;

  if(link_index == 2)
    return;

  jacobian(0,2) = -t3*y+t7*t8*t43;
  jacobian(1,2) = t3*x+t2*t8*t43;
  jacobian(2,2) = -t8*(t7*x+t2*y);
  jacobian(0,3) = t46*t68+t8*t9*t44;
  jacobian(1,3) = -t54*t68+t8*t9*(t37-x);
  jacobian(2,3) = t44*t54+t46*(t37-x);

  if(link_index == 1)
    return;

  // t2 = cos(q1);
  // t3 = cos(q2);
  // t4 = cos(q3);
  // t5 = cos(q4);
  // t6 = cos(q5);
  // t7 = sin(q1);
  // t8 = sin(q2);
  // t9 = sin(q3);
  // t10 = sin(q4);
  // t11 = sin(q5);
  // t12 = -z;
  // t13 = t2*t4;
  // t14 = t3*t5;
  // t15 = t2*t9;
  // t16 = t4*t7;
  // t17 = t3*t10;
  // t18 = t7*t9;
  // t19 = t7*t8*t10;
  // t23 = t2*t5*t8;
  // t24 = t4*t5*t8;
  // t26 = t2*t8*t10;
  // t27 = t5*t7*t8;
  // t28 = t4*t8*t10;
  // t29 = t6*t8*t9;
  // t31 = t3*(4.1E+1/1.0E+2);
  // t37 = t2*t8*(4.1E+1/1.0E+2);
  // t38 = t7*t8*(4.1E+1/1.0E+2);
  // t42 = t8*t9*9.8E-3;
  // t20 = t3*t13;
  // t21 = t3*t15;
  // t22 = t3*t16;
  // t25 = t3*t18;
  // t30 = -t19;
  // t34 = -t23;
  // t35 = -t24;
  // t36 = -t31;
  // t39 = t13*9.8E-3;
  // t40 = -t37;
  // t41 = t16*9.8E-3;
  // t43 = -t42;
  // t46 = t14+t28;
  // t49 = t14*3.111E-1;
  // t57 = t23*3.111E-1;
  // t58 = t27*3.111E-1;
  // t59 = t28*3.111E-1;
  // t32 = -t21;
  // t33 = -t22;
  // t44 = t13+t25;
  // t45 = t18+t20;
  // t47 = t21*9.8E-3;
  // t48 = t25*9.8E-3;
  // t52 = t17+t35;
  // t64 = -t58;
  // t76 = t31+t43+z-2.755E-1;
  // t81 = t12+t36+t42+t49+t59+2.755E-1;
  // t50 = t15+t33;
  // t51 = t16+t32;
  // t53 = -t47;
  // t54 = t5*t45;
  // t55 = t6*t44;
  // t56 = t10*t45;
  // t63 = t11*t52;
  // t77 = t38+t39+t48+y;
  // t60 = t5*t50;
  // t61 = t6*t51;
  // t62 = t10*t50;
  // t65 = t26+t54;
  // t67 = t29+t63;
  // t68 = t56*3.111E-1;
  // t69 = t34+t56;
  // t78 = t40+t41+t53+x;
  // t66 = t27+t62;
  // t70 = t11*t65;
  // t71 = -t68;
  // t72 = t30+t60;
  // t73 = t62*3.111E-1;
  // t75 = -t11*(t19-t60);
  // t74 = -t73;
  // t79 = t61+t70;
  // t80 = t55+t75;
  // t82 = t57+t71+t78;
  // t83 = t64+t74+t77;

  // jacobian(0,4) = t46*t77-t66*t76;
  // jacobian(0,5) = -t67*t83+t80*t81;
  // jacobian(1,4) = -t46*t78-t76*(t23-t56);
  // jacobian(1,5) = t67*t82-t79*t81;
  // jacobian(2,4) = t66*t78+t77*(t23-t56);
  // jacobian(2,5) = -t79*t83+t80*t82;

  jacobian(0,4) = t48*t81-t70*t80;
  jacobian(0,5) = -t71*t87+t84*t85;
  jacobian(1,4) = -t48*t82-t80*(t23-t59);
  jacobian(1,5) =  t71*t86-t83*t85;
  jacobian(2,4) = t70*t82+t81*(t23-t59);
  jacobian(2,5) = -t83*t87+t84*t86;

  return;
}

