<?xml version="1.0"?>
 <launch>

  <!-- send robot urdf to param server -->
  <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find movo_description)/urdf/movo.urdf.xacro'" />

  <!-- Robot state publisher -->
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
    <param name="publish_frequency" type="double" value="100.0" />
    <param name="tf_prefix" type="string" value="" />
  </node>

	<!-- Hardware Interface Controllers -->
        <rosparam file="$(find movo_hardware_interface)/config/hardware.yaml" command="load"/>

        <rosparam file="$(find movo_hardware_interface)/config/right_arm_7dof_controller.yaml" command="load"/>
        <rosparam file="$(find movo_hardware_interface)/config/right_gripper_controller.yaml" command="load"/>
        <rosparam file="$(find movo_hardware_interface)/config/left_arm_7dof_controller.yaml" command="load"/>
        <rosparam file="$(find movo_hardware_interface)/config/left_gripper_controller.yaml" command="load"/>
        <rosparam file="$(find movo_hardware_interface)/config/torso_controller.yaml" command="load"/>
        <rosparam file="$(find movo_hardware_interface)/config/head_controller.yaml" command="load"/>

        <rosparam file="$(find movo_hardware_interface)/config/joint_state_controller.yaml" command="load"/>
        <rosparam file ="$(find movo_hardware_interface)/config/controllers.yaml" command="load"/>
  
        <node name="movo_hardware_interface" pkg="movo_hardware_interface" type="movo_hardware_interface_node" output="screen"/>
        <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" ns="/"
		args="movo/right_arm_controller
		      movo/left_arm_controller 
		      movo/head_controller
		      movo/torso_controller
		      movo/left_gripper_controller
 		      movo/right_gripper_controller
                      joint_state_controller
		"/>

     <!-- Sound modules -->    
        <node pkg="sound_play" type="soundplay_node.py" name="sound_play" output="screen"/>
        <node pkg="movo_ros" type="movo_voice" name="movo_voice" output="screen"/>

        <!-- LiDAR modules -->    
        <node pkg="ira_laser_tools" name="laserscan_multi_merger" type="laserscan_multi_merger" output="screen">
           <param name="destination_frame" value="base_link"/>
           <param name="cloud_destination_topic" value="/movo/merged_cloud"/>
           <param name="scan_destination_topic" value="/movo/scan_multi"/>
           <param name="laserscan_topics" value ="/movo/$(optenv LASER1_PREFIX front)_scan /movo/$(optenv LASER2_PREFIX rear)_scan"/>
        </node>
    
        <node pkg="laser_filters" type="scan_to_scan_filter_chain" name="movo_laser_filter" clear_params="true" respawn="true">
           <remap from="scan" to="/movo/scan_multi" />
           <remap from="scan_filtered" to="/movo/base_scan_filtered" />
           <param name="target_frame" value="base_link" />
           <param name="high_fidelity" value="true" />
           <rosparam command="load" file="$(find movo_bringup)/launch/sensors/config/laser_scan_filter.yaml" />
        </node>

        <!-- Viz modules -->    
        <node name="rviz" pkg="rviz" type="rviz" args="-d $(find rrs_ros)/rviz/main.rviz" output="screen"/>

      

</launch>
